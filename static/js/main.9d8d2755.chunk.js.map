{"version":3,"sources":["api/getDataFromApi.js","components/Search.js","utils/illustrationColumns.js","components/ModalDescription.js","App.js","index.js"],"names":["getDataFromApi","a","page","url","config","params","count","axios","get","then","res","illustrationData","data","result","list","hasMore","length","catch","err","console","error","Search","onChangeHandler","e","str","target","value","trim","props","onChange","gutter","span","placeholder","this","size","style","marginBottom","Component","illustrationColumns","title","dataIndex","key","ModalDescription","dataModal","id","name","createdDate","cover","keywords","pack","className","color","map","tag","Date","now","src","width","alt","App","state","illustration","filterValue","isDisplayModal","fetchPageData","setPageData","setState","onSearchChange","addNextPageData","showModal","idx","find","el","hideModal","tableData","index","iterationId","filter","toString","indexOf","dataSource","columns","pagination","onRow","record","rowIndex","onClick","event","type","block","okText","visible","onCancel","onOk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEaA,EAAc,uCAAG,4CAAAC,EAAA,6DAAOC,EAAP,+BAAc,EACpCC,EAAM,8CAENC,EAAS,CACbC,OAAQ,CACNC,MAAO,GACPJ,SANwB,SAUfK,IACVC,IAAIL,EAAKC,GACTK,MAAK,SAACC,GACL,GAAIA,EAAK,CACP,IAAMC,EAAmBD,EAAIE,KAAKC,OAAOF,iBACzC,MAAO,CACLG,KAAMH,EACNI,QAASJ,EAAiBK,SAAWZ,EAAOC,OAAOC,WAIxDW,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MArBJ,mFAAH,qD,4CCgCZG,E,4MA7BbC,gBAAkB,SAACC,GACjB,IAAMC,EAAMD,EAAEE,OAAOC,MAAMC,OAC3B,EAAKC,MAAMC,SAASL,I,4CAGtB,WACE,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKM,OAAQ,CAAC,GAAI,IAAlB,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CACEC,YAAY,wIACZH,SAAUI,KAAKX,gBACfY,KAAK,QACLC,MAAO,CAAEC,aAAc,kB,GAhBlBC,aCJRC,EAAsB,CACjC,CACEC,MAAO,SACPC,UAAW,cACXC,IAAK,eAEP,CACEF,MAAO,KACPC,UAAW,KACXC,IAAK,MAEP,CACEF,MAAO,OACPC,UAAW,OACXC,IAAK,QAEP,CACEF,MAAO,eACPC,UAAW,cACXC,IAAK,gB,SC0CMC,E,4JAzDb,WAAU,IAAD,EAQHT,KAAKL,MAAMe,UANbC,EAFK,EAELA,GACAC,EAHK,EAGLA,KACAC,EAJK,EAILA,YACAC,EALK,EAKLA,MACAC,EANK,EAMLA,SACAC,EAPK,EAOLA,KAEF,OACE,mCACE,qBAAIC,UAAU,yBAAd,UACE,6BACE,sEAEGD,GAAQ,cAAC,IAAD,CAAKE,MAAM,OAAX,SAAmBF,EAAKJ,MAAQ,2DAG7C,+BACE,qCAAQD,GAAM,qEAAd,OACA,mFAAcC,GAAQ,wEACtB,4GAAmBC,GAAe,2EAEpC,6BACE,iHAEGE,GACCA,EAASI,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,CAAKF,MAAM,QAAX,SACGE,GAAO,2DADcA,EAAMC,KAAKC,eAM1CR,GACC,6BACE,qBAAKS,IAAKT,EAAOU,MAAO,IAAKC,IAAKb,e,GArCjBR,a,0BC8JhBsB,E,4MAxJbC,MAAQ,CACNC,aAAc,GACdC,YAAa,GACb5D,KAAM,EACNa,SAAS,EACTgD,gBAAgB,EAChBpB,UAAW,I,EAObqB,cAAgB,WACdhE,EAAe,EAAK4D,MAAM1D,MAAMO,KAAK,EAAKwD,c,EAG5CA,YAAc,YAAwB,IAArBnD,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACrB,EAAKmD,SAAS,CACZL,aAAa,GAAD,mBAAM,EAAKD,MAAMC,cAAjB,YAAkC/C,IAC9CC,a,EAIJoD,eAAiB,SAAC3C,GAChB,EAAK0C,SAAS,CACZJ,YAAatC,K,EAIjB4C,gBAAkB,WAChB,EAAKF,SACH,CACEhE,KAAM,EAAK0D,MAAM1D,KAAO,EACxBa,SAAS,GAEX,EAAKiD,gB,EAITK,UAAY,SAACC,GACX,IAAM1D,EAAO,EAAKgD,MAAMC,aAAaU,MAAK,SAACC,GAAD,OACxCA,EAAG5B,KAAO0B,EAAME,EAAK,QAGvB,EAAKN,SAAS,CACZH,gBAAgB,EAChBpB,UAAW/B,K,EAIf6D,UAAY,WACV,EAAKP,SAAS,CACZH,gBAAgB,K,uDA5CpB,WACE9B,KAAK+B,kB,oBA+CP,WAAU,IAAD,SAOH/B,KAAK2B,MALPC,EAFK,EAELA,aACAC,EAHK,EAGLA,YACA/C,EAJK,EAILA,QACAgD,EALK,EAKLA,eACApB,EANK,EAMLA,UAGI+B,EAAYb,EACfT,KAAI,WAA4BuB,GAA5B,IAAG/B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAb,MAAuC,CAC1C8B,YAAaD,EAAQ,EACrBlC,IAAI,GAAD,OAAKG,EAAL,YAAW+B,GACd/B,KACAC,OACAC,kBAED+B,QACC,gBAAGjC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAb,OACGgB,IACuC,IAAxClB,EAAGkC,WAAWC,QAAQjB,KACS,IAA/BjB,EAAKkC,QAAQjB,KACyB,IAAtChB,EAAYiC,QAAQjB,MAG1B,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,CAAQtC,KAAMiD,EAAchC,SAAUI,KAAKkC,iBAC3C,cAAC,IAAD,CACEa,WAAYN,EACZO,QAAS3C,EACT4C,YAAY,EACZC,MAAO,SAACC,EAAQC,GACd,MAAO,CACLC,QAAS,SAACC,GACR,EAAKlB,UAAUe,EAAOxC,SAK7B7B,GACC,cAAC,IAAD,CACEyE,KAAK,UACLtC,UAAU,cACVoC,QAASrD,KAAKmC,gBACdqB,OAAK,EAJP,iFASF,cAAC,IAAD,CACElD,MAAM,sHACNmD,OAAO,KACPC,QAAS5B,EACT6B,SAAU3D,KAAKwC,UACfoB,KAAM5D,KAAKwC,UALb,SAOE,cAAC,EAAD,CAAkB9B,UAAWA,a,GAnHrBN,a,OCFlByD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9d8d2755.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getDataFromApi = async (page = 1) => {\n  const url = \"http://95.216.159.188:7003/api/illustration\";\n\n  const config = {\n    params: {\n      count: 10,\n      page,\n    },\n  };\n\n  return await axios\n    .get(url, config)\n    .then((res) => {\n      if (res) {\n        const illustrationData = res.data.result.illustrationData;\n        return {\n          list: illustrationData,\n          hasMore: illustrationData.length === config.params.count,\n        };\n      }\n    })\n    .catch((err) => console.error(err));\n};\n","import React, { Component } from \"react\";\nimport { Input, Row, Col, Form } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nclass Search extends Component {\n  onChangeHandler = (e) => {\n    const str = e.target.value.trim();\n    this.props.onChange(str);\n  };\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Row gutter={[16, 16]}>\n            <Col span={24}>\n              <Input\n                placeholder='Введите слово для поиска ...'\n                onChange={this.onChangeHandler}\n                size='large'\n                style={{ marginBottom: 24 }}\n              />\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  }\n}\n\nSearch.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default Search;\n","export const illustrationColumns = [\n  {\n    title: \"№\",\n    dataIndex: \"iterationId\",\n    key: \"iterationId\",\n  },\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Created date\",\n    dataIndex: \"createdDate\",\n    key: \"createdDate\",\n  },\n];\n","import React, { Component } from \"react\";\nimport { Tag } from \"antd\";\nimport PropTypes from \"prop-types\";\nclass ModalDescription extends Component {\n  render() {\n    const {\n      id,\n      name,\n      createdDate,\n      cover,\n      keywords,\n      pack,\n    } = this.props.dataModal;\n    return (\n      <>\n        <ul className='description-modal-list'>\n          <li>\n            <p>\n              Раздел:\n              {pack && <Tag color='blue'>{pack.name || \"не найден\"}</Tag>}\n            </p>\n          </li>\n          <li>\n            <p>ID: {id || \"отсутствует\"} </p>\n            <p>Название: {name || \"отсутствует\"}</p>\n            <p>Дата создания: {createdDate || \"отсутствует\"}</p>\n          </li>\n          <li>\n            <p>\n              Ключевые слова:\n              {keywords &&\n                keywords.map((tag) => (\n                  <Tag color='green' key={tag + Date.now()}>\n                    {tag || \"не указаны\"}\n                  </Tag>\n                ))}\n            </p>\n          </li>\n          {cover && (\n            <li>\n              <img src={cover} width={272} alt={name} />\n            </li>\n          )}\n        </ul>\n      </>\n    );\n  }\n}\n\nModalDescription.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  createdDate: PropTypes.string,\n  cover: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  pack: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n  }),\n};\n\nexport default ModalDescription;\n","import React, { Component } from \"react\";\nimport { getDataFromApi } from \"./api/getDataFromApi\";\nimport Search from \"./components/Search\";\nimport { illustrationColumns } from \"./utils/illustrationColumns\";\nimport ModalDescription from \"./components/ModalDescription\";\nimport { Button, Modal, Table } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nclass App extends Component {\n  state = {\n    illustration: [],\n    filterValue: \"\",\n    page: 1,\n    hasMore: false,\n    isDisplayModal: false,\n    dataModal: {},\n  };\n\n  componentDidMount() {\n    this.fetchPageData();\n  }\n\n  fetchPageData = () => {\n    getDataFromApi(this.state.page).then(this.setPageData);\n  };\n\n  setPageData = ({ list, hasMore }) => {\n    this.setState({\n      illustration: [...this.state.illustration, ...list],\n      hasMore,\n    });\n  };\n\n  onSearchChange = (str) => {\n    this.setState({\n      filterValue: str,\n    });\n  };\n\n  addNextPageData = () => {\n    this.setState(\n      {\n        page: this.state.page + 1,\n        hasMore: false,\n      },\n      this.fetchPageData\n    );\n  };\n\n  showModal = (idx) => {\n    const data = this.state.illustration.find((el) =>\n      el.id === idx ? el : null\n    );\n\n    this.setState({\n      isDisplayModal: true,\n      dataModal: data,\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      isDisplayModal: false,\n    });\n  };\n\n  render() {\n    const {\n      illustration,\n      filterValue,\n      hasMore,\n      isDisplayModal,\n      dataModal,\n    } = this.state;\n\n    const tableData = illustration\n      .map(({ id, name, createdDate }, index) => ({\n        iterationId: index + 1,\n        key: `${id}_${index}`,\n        id,\n        name,\n        createdDate,\n      }))\n      .filter(\n        ({ id, name, createdDate }) =>\n          !filterValue ||\n          id.toString().indexOf(filterValue) !== -1 ||\n          name.indexOf(filterValue) !== -1 ||\n          createdDate.indexOf(filterValue) !== -1\n      );\n\n    return (\n      <div className='app'>\n        <Search data={illustration} onChange={this.onSearchChange}></Search>\n        <Table\n          dataSource={tableData}\n          columns={illustrationColumns}\n          pagination={false}\n          onRow={(record, rowIndex) => {\n            return {\n              onClick: (event) => {\n                this.showModal(record.id);\n              },\n            };\n          }}\n        />\n        {hasMore && (\n          <Button\n            type='primary'\n            className='btn-addMore'\n            onClick={this.addNextPageData}\n            block\n          >\n            Показать еще\n          </Button>\n        )}\n        <Modal\n          title='Подробная информация'\n          okText='Ok'\n          visible={isDisplayModal}\n          onCancel={this.hideModal}\n          onOk={this.hideModal}\n        >\n          <ModalDescription dataModal={dataModal} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  illustration: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    createdDate: PropTypes.string,\n    cover: PropTypes.string,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    pack: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  }),\n\n  filterValue: PropTypes.string,\n  page: PropTypes.number,\n  hasMore: PropTypes.bool,\n  isDisplayModal: PropTypes.bool,\n\n  dataModal: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    createdDate: PropTypes.string,\n    cover: PropTypes.string,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    pack: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  }),\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}