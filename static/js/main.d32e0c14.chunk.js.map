{"version":3,"sources":["api/getDataFromApi.js","components/Search.js","App.js","index.js"],"names":["getDataFromApi","a","page","url","config","params","count","axios","get","then","res","illustrationData","data","result","list","hasMore","length","catch","err","console","error","Search","onChangeHandler","e","str","target","value","trim","props","onChange","gutter","span","placeholder","this","size","style","marginBottom","Component","columns","title","dataIndex","key","App","state","illustration","filterValue","isDisplayModal","dataModal","fetchPageData","setPageData","setState","onSearchChange","addNextPageData","showModal","hideModal","tableData","map","index","id","name","createdDate","cover","keywords","pack","iterationId","filter","indexOf","className","dataSource","pagination","onRow","record","rowIndex","onClick","event","log","type","block","okText","visible","onCancel","onOk","color","tag","idx","Date","now","src","width","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d32e0c14.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getDataFromApi = async (page = 1) => {\n  const url = \"http://95.216.159.188:7003/api/illustration\";\n\n  const config = {\n    params: {\n      count: 10,\n      page,\n    },\n  };\n\n  return await axios\n    .get(url, config)\n    .then((res) => {\n      if (res) {\n        const illustrationData = res.data.result.illustrationData;\n        return {\n          list: illustrationData,\n          hasMore: illustrationData.length === config.params.count,\n        };\n      }\n    })\n    .catch((err) => console.error(err));\n};\n","import React, { Component } from \"react\";\nimport { Input, Row, Col, Form } from \"antd\";\n\nclass Search extends Component {\n  onChangeHandler = (e) => {\n    const str = e.target.value.trim();\n    this.props.onChange(str);\n  };\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Row gutter={[16, 16]}>\n            <Col span={24}>\n              <Input\n                placeholder='Введите слово для поиска ...'\n                onChange={this.onChangeHandler}\n                size='large'\n                style={{ marginBottom: 24 }}\n              />\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport { getDataFromApi } from \"./api/getDataFromApi\";\nimport Search from \"./components/Search\";\nimport { Table, Button, Modal, Tag } from \"antd\";\n\nconst columns = [\n  {\n    title: \"№\",\n    dataIndex: \"iterationId\",\n    key: \"iterationId\",\n  },\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Created date\",\n    dataIndex: \"createdDate\",\n    key: \"createdDate\",\n  },\n];\n\nclass App extends Component {\n  state = {\n    illustration: [],\n    filterValue: \"\",\n    page: 1,\n    hasMore: false,\n    isDisplayModal: false,\n    dataModal: {},\n  };\n\n  componentDidMount() {\n    this.fetchPageData();\n  }\n\n  fetchPageData = () => {\n    getDataFromApi(this.state.page).then(this.setPageData);\n  };\n\n  setPageData = ({ list, hasMore }) => {\n    this.setState({\n      illustration: [...this.state.illustration, ...list],\n      hasMore,\n    });\n  };\n\n  onSearchChange = (str) => {\n    this.setState({\n      filterValue: str,\n    });\n  };\n\n  addNextPageData = () => {\n    this.setState(\n      {\n        page: this.state.page + 1,\n        hasMore: false,\n      },\n      this.fetchPageData\n    );\n  };\n\n  showModal = (data) => {\n    this.setState({\n      isDisplayModal: true,\n      dataModal: data,\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      isDisplayModal: false,\n    });\n  };\n\n  render() {\n    const { illustration, filterValue, hasMore, dataModal } = this.state;\n\n    const tableData = illustration\n      .map(({ id, name, createdDate, cover, keywords, pack }, index) => ({\n        iterationId: index + 1,\n        key: `${id}_${index}`,\n        id: `${id}`,\n        name,\n        createdDate,\n        cover,\n        keywords,\n        pack,\n      }))\n      .filter(\n        ({ id, name, createdDate }) =>\n          !filterValue ||\n          id.indexOf(filterValue) !== -1 ||\n          name.indexOf(filterValue) !== -1 ||\n          createdDate.indexOf(filterValue) !== -1\n      );\n\n    return (\n      <div className='app'>\n        <Search data={illustration} onChange={this.onSearchChange}></Search>\n        <Table\n          dataSource={tableData}\n          columns={columns}\n          pagination={false}\n          onRow={(record, rowIndex) => {\n            return {\n              onClick: (event) => {\n                console.log(record);\n                this.showModal(record);\n              },\n            };\n          }}\n        />\n        {hasMore && (\n          <Button\n            type='primary'\n            className='btn-addMore'\n            onClick={this.addNextPageData}\n            block\n          >\n            Показать еще\n          </Button>\n        )}\n        <Modal\n          title='Подробная информация'\n          okText='Ok'\n          visible={this.state.isDisplayModal}\n          onCancel={this.hideModal}\n          onOk={this.hideModal}\n        >\n          <ul>\n            <li>\n              <p>\n                Раздел:\n                {dataModal.pack && (\n                  <Tag color='blue'>{dataModal.pack.name}</Tag>\n                )}\n              </p>\n            </li>\n            <li>\n              <p>ID: {dataModal.id} </p>\n              <p>Название: {dataModal.name}</p>\n              <p>Дата создания: {dataModal.createdDate}</p>\n            </li>\n            <li>\n              <p>\n                Ключевые слова:\n                {dataModal.keywords &&\n                  dataModal.keywords.map((tag, idx) => (\n                    <Tag color='green' key={tag + Date.now()}>\n                      {tag}\n                    </Tag>\n                  ))}\n              </p>\n            </li>\n            <li>\n              <img src={dataModal.cover} width={272} alt={dataModal.name} />\n            </li>\n          </ul>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}